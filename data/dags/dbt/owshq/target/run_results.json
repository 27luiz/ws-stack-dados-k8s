{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.8", "generated_at": "2024-02-23T20:03:31.143853Z", "invocation_id": "c804ee0b-9be6-4e3c-9ed7-ceff186fac94", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-02-23T20:03:30.067103Z", "completed_at": "2024-02-23T20:03:30.072610Z"}, {"name": "execute", "started_at": "2024-02-23T20:03:30.073631Z", "completed_at": "2024-02-23T20:03:31.137817Z"}], "thread_id": "Thread-1", "execution_time": 1.073578119277954, "adapter_response": {"_message": "SUCCESS", "rows_affected": -1, "query": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.7.8\", \"profile_name\": \"minio\", \"target_name\": \"dev\", \"node_id\": \"model.dev.ride_transactions\"} */\n\n  create or replace view\n    \"iceberg\".\"landing\".\"ride_transactions\"\n  security definer\n  as\n    \n\nWITH user AS (\n    SELECT *\n    FROM \"iceberg\".\"landing\".\"users\"\n),\nvehicle AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_vehicle\"\n),\nsubscription AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_subscription\"\n),\nstripe AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"mongodb_stripe\"\n),\npayment AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_payments\"\n)\nSELECT rides.ride_id AS ride_id,\n    rides.user_id AS user_id,\n    rides.vehicle_id AS vehicle_id,\n    rides.subscription_id AS subscription_id,\n    rides.stripe_id AS stripe_id,\n    rides.payment_id AS payment_id,\n    user.full_name AS user_full_name,\n    user.cpf AS user_cpf,\n    rides.source AS source,\n    rides.destination AS destination,\n    rides.estimated_price AS estimated_price,\n    rides.surge_multiplier AS dynamic_fare,\n    rides.price AS price,\n    vehicle.name AS vehicle_name,\n    vehicle.year AS vehicle_year,\n    vehicle.km_driven AS vehicle_km_driven,\n    vehicle.seats AS vehicle_seats,\n    subscription.plan AS subscription_plan,\n    subscription.status AS subscription_status,\n    subscription.payment_method AS subscription_payment_method,\n    stripe.identifier AS stripe_identifier,\n    stripe.card_type AS stripe_card_type,\n    payment.city AS payment_city,\n    payment.country AS payment_country,\n    payment.currency AS payment_currency,\n    payment.credit_card_type AS payment_credit_card_type,\n    payment.price AS payment_price\nFROM \"iceberg\".\"landing\".\"mongodb_rides\" AS rides\nLEFT OUTER JOIN user AS user\nON rides.user_id = user.user_id\nLEFT OUTER JOIN vehicle AS vehicle\nON rides.vehicle_id = vehicle.vehicle_id\nLEFT OUTER JOIN subscription AS subscription\nON rides.subscription_id = subscription.subscription_id\nLEFT OUTER JOIN stripe AS stripe\nON rides.stripe_id = stripe.stripe_id\nLEFT OUTER JOIN payment AS payment\nON rides.payment_id = payment.payment_id\n  ", "query_id": "20240223_200330_00561_m7mg4"}, "message": "SUCCESS", "failures": null, "unique_id": "model.dev.ride_transactions", "compiled": true, "compiled_code": "\n\nWITH user AS (\n    SELECT *\n    FROM \"iceberg\".\"landing\".\"users\"\n),\nvehicle AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_vehicle\"\n),\nsubscription AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_subscription\"\n),\nstripe AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"mongodb_stripe\"\n),\npayment AS (\n    SELECT * \n    FROM \"iceberg\".\"landing\".\"postgres_payments\"\n)\nSELECT rides.ride_id AS ride_id,\n    rides.user_id AS user_id,\n    rides.vehicle_id AS vehicle_id,\n    rides.subscription_id AS subscription_id,\n    rides.stripe_id AS stripe_id,\n    rides.payment_id AS payment_id,\n    user.full_name AS user_full_name,\n    user.cpf AS user_cpf,\n    rides.source AS source,\n    rides.destination AS destination,\n    rides.estimated_price AS estimated_price,\n    rides.surge_multiplier AS dynamic_fare,\n    rides.price AS price,\n    vehicle.name AS vehicle_name,\n    vehicle.year AS vehicle_year,\n    vehicle.km_driven AS vehicle_km_driven,\n    vehicle.seats AS vehicle_seats,\n    subscription.plan AS subscription_plan,\n    subscription.status AS subscription_status,\n    subscription.payment_method AS subscription_payment_method,\n    stripe.identifier AS stripe_identifier,\n    stripe.card_type AS stripe_card_type,\n    payment.city AS payment_city,\n    payment.country AS payment_country,\n    payment.currency AS payment_currency,\n    payment.credit_card_type AS payment_credit_card_type,\n    payment.price AS payment_price\nFROM \"iceberg\".\"landing\".\"mongodb_rides\" AS rides\nLEFT OUTER JOIN user AS user\nON rides.user_id = user.user_id\nLEFT OUTER JOIN vehicle AS vehicle\nON rides.vehicle_id = vehicle.vehicle_id\nLEFT OUTER JOIN subscription AS subscription\nON rides.subscription_id = subscription.subscription_id\nLEFT OUTER JOIN stripe AS stripe\nON rides.stripe_id = stripe.stripe_id\nLEFT OUTER JOIN payment AS payment\nON rides.payment_id = payment.payment_id", "relation_name": "\"iceberg\".\"landing\".\"ride_transactions\""}], "elapsed_time": 3.0267341136932373, "args": {"write_json": true, "version_check": true, "strict_mode": false, "print": true, "profiles_dir": "/Users/luanmorenomaciel/GitHub/ws-stack-dados-k8s/data/dags/dbt/owshq", "log_file_max_bytes": 10485760, "enable_legacy_logger": false, "log_format_file": "debug", "log_format": "default", "show_resource_report": false, "send_anonymous_usage_stats": true, "partial_parse": true, "which": "run", "cache_selected_only": false, "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "indirect_selection": "eager", "introspect": true, "quiet": false, "use_colors": true, "vars": {}, "static_parser": true, "log_level": "info", "select": ["ride_transactions"], "log_path": "/Users/luanmorenomaciel/GitHub/ws-stack-dados-k8s/data/dags/dbt/owshq/logs", "partial_parse_file_diff": true, "log_level_file": "debug", "macro_debugging": false, "project_dir": "/Users/luanmorenomaciel/GitHub/ws-stack-dados-k8s/data/dags/dbt/owshq", "populate_cache": true, "favor_state": false, "defer": false, "printer_width": 80, "use_colors_file": true, "invocation_command": "dbt "}}